#! /bin/zsh

typeset -Ag M4_PROMPTSTATE  # Holds prompt state, to decide whether to chg it
typeset -g  M4_SEGMENTS     # Segments configuration
typeset -A  M4_SCHEME       # Color scheme




# =========== STYLES SETUP =====================================================

M4_SEGMENTS=(
    user
    dir
)

M4_SCHEME=(

    dir_fg  022         # Current directory fg
    dir_bg  193         # Current directory bg

    usr_fg  006         # Current user fg
    usr_bg  023         # Current user bg

    su_fg   210         # Superuser fg
    su_bg   052         # Superuser bg

    separator '\ue0b0'  # Powerline |>

)






# =========== M4_PROMPTSTATE ===================================================
#   
#   KEY         MEANING
#   ------------------------------------------------
#   readonly    Current folder has now write access
#   git         Current folder has git information
#

M4_PROMPTSTATE=(
    readonly    -1
    git         -1
)







# =========== SEGMENTS =========================================================

segment_user_color() {

    # Redefine color scheme to obtain custom colors
    case $1 in
        fg) # foreground
            echo -n "%(!.%{%F{$M4_SCHEME[su_fg]}%}.%{%F{$M4_SCHEME[usr_fg]}%})"
            ;;
        bg) # background
            echo -n "%(!.%{%K{$M4_SCHEME[su_bg]}%}.%{%K{$M4_SCHEME[usr_bg]}%})"
            ;;
        bginv) # background as foreground
            echo -n "%(!.%{%F{$M4_SCHEME[su_bg]}%}.%{%F{$M4_SCHEME[usr_bg]}%})"
            ;;
        fgbg)  # backgound and foreground
            echo -n "%(!.%{%F{$M4_SCHEME[su_fg]}%}%{%K{$M4_SCHEME[su_bg]}%}.%{%F{$M4_SCHEME[usr_fg]}%}%{%K{$M4_SCHEME[usr_bg]}%})"
            ;;
    esac

}

segment_user() {

    echo -n "%n"

    return 0
}






segment_dir() {

   echo -n "%30<â€¦<%~%<<"

    # Check if writable
    [[ $M4_PROMPTSTATE[readonly] -eq 1 ]] && echo -n " \ue0a2"   # locket

    return 0
}





# =========== SEGMENT DRAWING FUNC =============================================


segment() {
    # Takes the id of the segment and outputs the body, by calling
    # `segment_${1}`.

    if whence segment_${1} > /dev/null; then

        segment_${1}

    fi
}

segment_color() {
    # Takes the id of the segment as input and a code for which color to use
    # and applies it.
    # If a function `segment_${1}_color` is defined, that is called instead.
    #
    #   $1  id of the segment
    #   $2  one of the following:
    #       - `fg`: foreground
    #       - `bg`: background
    #       - `bginv`: background as foreground
    #       - `fgbg`: background and foreground
    #
    # The function will look up M4_SCHEME for entries in the form `${1}_fg` and
    # `${1}_bg` to extract the color.


    # Check if a custom function is available
    if whence segment_${1}_color > /dev/null; then

        # Custom function!
        segment_${1}_color $2

    else

        case $2 in
            fg) # foreground
                [[ -n $M4_SCHEME[${1}_fg] ]] && echo -n "%{%F{$M4_SCHEME[$1_fg]}%}"
                ;;
            bg) # background
                [[ -n $M4_SCHEME[${1}_bg] ]] && echo -n "%{%K{$M4_SCHEME[$1_bg]}%}"
                ;;
            bginv) # background as foreground
                [[ -n $M4_SCHEME[${1}_bg] ]] && echo -n "%{%F{$M4_SCHEME[$1_bg]}%}"
                ;;
            fgbg)  # backgound and foreground
                #segment_color $1 fg
                #segment_color $1 bg
                [[ -n $M4_SCHEME[${1}_fg] ]] && echo -n "%{%F{$M4_SCHEME[$1_fg]}%}"
                [[ -n $M4_SCHEME[${1}_bg] ]] && echo -n "%{%K{$M4_SCHEME[$1_bg]}%}"
                ;;
        esac

    fi

}




build_prompt() {

    local last body

    for current in $M4_SEGMENTS; do

        # Extract the value
        body=$(segment $current)

        # Check if the return code is ok
        if [[ $? -eq 0 ]]; then

            # Ok this segment must be drawn.
            if [[ -n $last ]]; then

                # Draw the separator
                segment_color $last bginv
                segment_color $current bg
                echo -n $M4_SCHEME[separator]
                segment_color $current fg

            else

                # Just set the colors
                segment_color $current fgbg

            fi

            # Print the body
            echo -n " $body "

            # Save it
            last=$current

        fi

    done

    # Finish it!
    if [[ -n $last ]]; then

        segment_color $last bginv
        echo -n "%{%k%}$M4_SCHEME[separator]%{%f%} "

    else

        # Echo an error prompt
        echo -n "NOSEG - %m%# "

    fi

}




PROMPT=$(build_prompt)




# Use ZSH hooks for handling the prompt change
#autoload -U add-zsh-hook
